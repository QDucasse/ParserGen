Goal = MainClass, { ClassDeclaration }, EOF;
MainClass     =     "class", Identifier , "{", "public", "static", "void", "main", "(", "String", "[", "]", Identifier, ")", "{", Statement, "}", "}";
ClassDeclaration     =     "class", Identifier, [ "extends", Identifier ], "{", { VarDeclaration }, { MethodDeclaration },"}";
VarDeclaration     =     Type, Identifier, ";";
MethodDeclaration     =     "public", Type, Identifier, "(", [ Type, Identifier, { ",", Type, Identifier }, ], ")", "{", { VarDeclaration }, { Statement }, "return", Expression, ";", "}";
Type     =     "int", [ "[", "]" ]
    |     "boolean"
    |     Identifier
    ;
Statement     =     "{", { Statement }, "}"
    |     "if", "(", Expression, ")", Statement, "else", Statement
    |     "while", "(", Expression, ")", Statement
    |     "System.out.println", "(" , Expression, ")", ";"
    |     Identifier, "=", Expression, ";"
    |     Identifier, "[", Expression, "]", "=", Expression, ";"
    ;
Expression     =     Expression1
    |   IntegerLiteral
    |     Identifier
    |     Special
    |     "!", Expression
    |     "(", Expression, ")"
    |     Expression2
    |     Expression3
    |     Expression4
    ;
Expression1 =  ( IntegerLiteral | Identifier ),  [ "&&" | "<" | "+" | "-" | "*" ], ( IntegerLiteral | Identifier | Bool | Special | Expression5);
Expression2 = Expression , "[", Expression, "]";
Expression3 = Expression , ".", "length";
Expression4 = Expression, ["(",[Expression1],")"] , ".", Identifier, "(", [ Expression, {",", Expression } ], ")";
Expression5 = "new", ( ("int", "[", Expression, "]") |  ( Expression4 ) );
Expression6 = Expression, Expression7;
Expression7 = ["(",[Expression],")"];
Bool = "true" | "false";
Special = "this" , ["."] , [Expression6];

alphabeticCharacter = "A" | "B" | "C" | "D" | "E" | "F" | "G"
                     | "H" | "I" | "J" | "K" | "L" | "M" | "N"
                     | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
                     | "V" | "W" | "X" | "Y" | "Z" | "a" | "b"
                     | "c" | "d" | "e" | "f" | "g" | "h" | "i"
                     | "j" | "k" | "l" | "m" | "n" | "o" | "p"
                     | "q" | "r" | "s" | "t" | "u" | "v" | "w"
                     | "x" | "y" | "z" ;
specialCharacter = "_";
whitespace = " " , { whitespace };
Identifier = ( allCharacters | IntegerLiteral | whitespace | specialCharacter) , { allCharacters | IntegerLiteral | whitespace | specialCharacter } ;
allCharacters = alphabeticCharacter;
Digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
IntegerLiteral = digit, {digit};
EOF = ".";
